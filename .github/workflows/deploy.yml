name: Deploy Container

on:
  workflow_dispatch: # Manual trigger
    inputs:
      repo_ref:
        description: 'Version or SHA associated with container build'
        required: false
        type: string
        default: 'latest'
  workflow_call: # Callable by other workflows
    inputs:
      image_tag:
        description: 'Tag of the image to deploy (default: latest)'
        required: false
        type: string
        default: 'latest'
    secrets:
      SSH_HOST:
        description: 'IP address of SSH host'
        required: true
      SSH_USERNAME:
        description: 'username to use to connect to SSH host'
        required: true
      SSH_KEY:
        description: 'private key to use to connect to SSH host'
        required: true
      WIX_CLIENT_ID:
        description: 'ClientID needed for Wix API'
        required: true
      WIX_API_KEY:
        description: 'API key needed for elevated calls to the Wix API'
        required: false
      WIX_SITE_ID:
        description: 'SiteID needed for elevated calls to the Wix API'
        required: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTAINER_NAME: totaltease

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Login to registry and pull image
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u $ --password-stdin
            podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}

      - name: Handle existing container
        uses: appleboy/ssh-action@v1.2.0
        id: container-check
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            if podman container exists ${{ env.CONTAINER_NAME }}; then
              podman stop ${{ env.CONTAINER_NAME }} && podman rm ${{ env.CONTAINER_NAME }}
            fi

      - name: Start new container
        uses: appleboy/ssh-action@v1.2.0
        id: start-container
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            podman run -d \
              --name ${{ env.CONTAINER_NAME }} \
              --env WIX_CLIENT_ID=${{ secrets.WIX_CLIENT_ID }} \
              --env WIX_API_KEY=${{ secrets.WIX_API_KEY }} \
              --env WIX_SITE_ID=${{ secrets.WIX_SITE_ID }} \
              --env NODE_ENV="production" \
              -p ${{ vars.CONTAINER_HOST_PORT }}:3000 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image_tag }}

      - name: Verify deployment
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            if ! podman container exists ${{ env.CONTAINER_NAME }}; then
              echo "Container failed to start"
              podman logs ${{ env.CONTAINER_NAME }}
              exit 1
            fi
            echo "Container is running"
            podman ps -f name=${{ env.CONTAINER_NAME }}
